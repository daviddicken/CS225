#!/bin/bash
. ~/projects/CS225/library

trap "trapCleanup" SIGINT SIGTERM

SCRIPTNAME=${0##*/}
while getopts :fdh opt ;do
	case $opt in 
		f) FORCE='true' ;;
		d) set -x ;;
		h) echo "Usage: ${0##*/} [options]"
		   echo " "
		   echo "Options:"
		   echo " -f forces files to be moved instead of copied."
		   echo " -d turns debugging on."
		   echo " -h prints out help page."
		   exit 0
		;;
		*) echo "Invalid Option: Try '${0##*/} -h' for more information."
		   exit 1
		;;
	esac
done
shift $(($OPTIND-1))

echo "Please enter the path to the directory containing the media fies that you would like sorted:"
#read MEDIAdir                # Un comment line when done testing program
MEDIAdir=/root/finalfiles     # Remove after you un comment read MEDIAdir
LIST=$(ls $MEDIAdir)          # Creates a list of filenames in directory passed in
FINALDIR=$( getFinalFolder )  # Create a directory to store copies of media
exifToolInstall               # Check if exiftool is installed an in stall it if needed

JCOPY="0" MCOPY="0" JSAME="0" MSAME="0" # Counters

### MAIN LOOP
for LINE in $LIST ;do
	LOCATION="$MEDIAdir"/"$LINE"
	echo "Processing "$LINE""	
	unset MAKE MODEL TYPE CREATED  # Clear variables 

	# Grab the type of file; check if it is a image or video; if it is get other info from file;
	# If not a image or video move on to the next file
	TYPE=$( getType "$LOCATION" ) 
	if [[ ( "$TYPE" == "image"* || "$TYPE" == "video"* ) ]] ;then
		
		MAKE=$( getMake "$LOCATION" )
		# Next two lines capitalize the 1st letter making it more uniform
		declare -c MAKE        
		MAKE=$MAKE		

		if [[ -z $MAKE ]] ;then
			MAKE="Unknown"
		fi

		MODEL=$( getModel "$LOCATION" )
		if [[ -z $MODEL ]] ;then
			MODEL="Unknown"
		fi
		
		CREATED=$( getCreate "$LOCATION" )      
		if [[ -z $CREATED ]] ;then
			CREATED=$( getMod "$LOCATION" )  # If no create date get date last modified 
		fi
	       
	        EXT=$( getExt "$LOCATION" )              # Convert the extention to lowercase letters
		NEWNAME=$( getNewName "$CREATED" "$MAKE" "$MODEL" "$EXT" )   # Create a new filename for file
		copy2temp "$LINE" "$NEWNAME" "$FINALDIR" "$LOCATION" "$TYPE"; COUNT=$? # Copy file w/ new name
		
		# Use return value of copy2temp to increment the correct counter
		case $COUNT in
			1) ((JCOPY++)) ;;
			2) ((MCOPY++)) ;;
			3) ((JSAME++)) ;;
			4) ((MSAME++)) ;;
		esac 
	fi
done

# If force option was selected remove all old files that where copied
if [[ $FORCE = true ]] ;then
	removeOld "$MEDIAdir"
fi

cleanup
output "$JCOPY" "$MCOPY" "$JSAME" "$MSAME"

